{
    "llm_config": {
       "fallbacks": [
            {
                "class": "primary-gpt",
                "model_name": "gpt-4",
                "verbose": "true",
                "OPENAI_PROXY": "None",
                "top_p":0,
                "seed":43,
                "OPENAI_API_TYPE": "azure",
            },
            {
                "class": "fallback-gpt",
                "model_name": "gpt-4o",
                "verbose": "true",
                "OPENAI_PROXY": "None",
                "top_p":0,
                "seed":43,
                "OPENAI_API_TYPE": "azure",
            }
        ]
    },
   "commondefs": {
        "replacement_strings": {
            "instructions_prefix": """
                You are a multi-agent orchestrator tasked with identifying the most suitable tool to address the user's query.
                Instead of relying on your own knowledge or expertise,
                you should generate responses based on the information provided by the downstream agents' tools
            """,

            "aaosa_instructions": """
                Your tools act as your down-chain agents. Do not make assumptions as to what you can or cannot do.
                When handling an inquiry, follow these steps:

                0.Tool Relevance Filtering Rule:
                    1.Before calling any tool, evaluate its description against the user's query. If the tool's purpose or capabilities are clearly irrelevant to the intent of the query, do not call that tool.
                    2.A tool is considered irrelevant if its description does not align with the domain, task type, or expected output of the user's request.
                1.Once the strongest claim is determined among the claims provided by all the tools, choose to call the tool having strongest claim if you are satisfied, or ask the user to rephrase the query. Additionally, do not show the strength, claim, internal tools claims, etc in your final response.
                2. Call only the tools responsible for addressing the inquiry.
                3. Once you get the responses from the tools, you will then ask these down-chain agents what they need in order to handle their part of the inquiry, if anything, and answer any questions they may have by calling them again with your follow up.
                4. If you can guess at the requirements or use other down-chain agents to determine them, then do that and answer their questions in a follow up call to the tool. Otherwise, ask the user.
                5. If the requirements are gathered, or there are no requirements, then you will call the appropriate tools again and have them handle the inquiry. Note that the down-chain might be a few levels below, so you should call the tool that will lead to that down-chain (i.e., down-chain to you, but up-chain to the responsible agent).
                6. Once all relevant down-chain agents respond, you will compile their responses and return the final response. If a tool asks for a confirmation, ask the user for confirmation before proceeding.
                7. Return Response in simple plain text format.
                8. If a task has been executed, provide the tool's summary response. You may, in turn, be called by other agents in the system and have to act as a down-chain to them. Do NOT answer before you've called your tools
                9. Return the exact exception message in case of errors response should be in Adaptive Card JSON format.
                10.If the response from the tool is not valid or appropriate, call the second most claimed tool to get the response and return it.***

                Important: You are not allowed to modify or explain the tool output. Just return it as simple text format. This ensures minimal latency and avoids redundant processing.
                You may, in turn, be called by other agents in the system and have to act as a down-chain to them.
                Do NOT answer before you've called your tools.
            """
        },
        "replacement_values": {
            "aaosa_call": {
                "description": """
                    Depending on the mode, returns a natural language string in response.
                    Based on the mode ('Determine', 'Fulfill', or 'Follow up'), the agent identifies the most relevant tool, processes the inquiry,
                    and returns the appropriate response
                """,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "inquiry": {
                            "type": "string",
                            "description": "The inquiry"
                        },
                        "mode": {
                            "type": "string",
                            "description": """
                                'Determine' to ask the agent if the inquiry belongs to it, in its entirety or in part.
                                'Fulfill' to ask the agent to fulfill the inquiry, if it can.
                                'Follow up' to ask the agent to respond to a follow up.
                            """
                            },
                        },
                        "required": [
                            "inquiry",
                            "mode"
                        ]
                    }
            },

        "aaosa_command": """
            If mode is 'Determine', identify the most relevant agent to handle the inquiry based on its context and call the appropriate agent. Then, return a json block with the following fields:
            {
                "Name": <your name>,
                "Inquiry": <the inquiry>,
                "Mode": <Determine | Fulfill>,
                "Relevant": <Yes | No>,
                "Strength": <number between 1 and 10 representing how certain you are in your claim>,
                "Claim": <All | Partial>,
                "Requirements": <None | list of requirements>,
                "Response": <your response>
            }
            If mode is 'Fulfill' or "Follow up", respond to the inquiry and return a json block with the following fields:
            {
                "Name": <your name>,
                "Inquiry": <the inquiry>,
                "Mode": Fulfill,
                "Response": <your response>
            }
        """
        }
    },
    "tools": [
        {
            "name": "OneCAssistant",
            "function": {
                "description": """
                    Your name is OneCAssistant. You respond to employee inquiries related to Cognizant's Enterprise-related queries.
                    Your down-chain agents (or tools) will help you determine your scope of operations.
                """
            },
            "verbose":true,
            "max_message_history":10,
            "error_formatter": "json",
            "error_fragments": ["TypeError:","ResponsibleAIPolicyViolation","Rate limit is exceeded"],
            "instructions": """
                {instructions_prefix}
                You are the top-level agent responsible for handling all inquiries related to the Cognizant's Enterprise Chatbot.
                When interacting with the user, act as the single point of interaction. No need to mention the other tools or agents.
                If there are any requirements that need user input, ask them one at a time, with clear examples of the choices available.
                {aaosa_instructions}
            """,
            "tools": ["1C","Seat_Agent","Cab_Agent"],
            "allow": {
                "to_upstream": {
                    "sly_data": ["IntentId","Response","ResponseSource","AgentName","Is_Autonomous_Agent","Is_ChatContext_Required","Is_SessionID_Required","Agent_Generated_Session_ID"]
                },
                "sly_data": {
                    "associate_id": true,
                    "App_id": true,
                    "Location": true,
                    "Dept_id": true,
                    "grade": true,
                    "bot_id": true,
                    "session_id": true,
                    "query_id": true
                }
            }
        },
        {
            "name": "Seat_Agent",
            "function": "aaosa_call",
            "instructions": """
            {instructions_prefix}
            You are responsible for managing Flexi Seats in Cognizant offices.
            These are flexible workspaces that associates can book across various cities and facilities.
            {aaosa_instructions}
            """,
            "command": "aaosa_command",
            "tools": ["book_seat","cancel_seat","view_seat"],
            "allow": {
                "sly_data": {
                    "associate_id": true
                }
            }
        },
        {
            "name": "book_seat",
            "function": {
                "description": """
                    Handles user requests to book a workspace (Flexi Seat).
                    Examples:
                    1. "I want to book a flexi seat."
                    2. "Can you book a workspace seat for me?"
                    3. "Please book a seat for tomorrow.
                """,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "type": "string",
                            "description": "The user's query for booking a cab."
                        }
                    },
                    "required": ["query"]
                }
            },
            "class": "get_onec_faq.GetOneCFAQTool"
        },
        {
            "name": "cancel_seat",
            "function": {
                "description": """
                    Handles user requests to cancel an existing seat booking.
                        Examples:
                        1. "Cancel my seat booking."
                        2. "I need to cancel my flexi seat reservation."
                        3. "Cancel my flexi seat for this week."
                """,
            },
            "class": "get_seat_details.AssociateSeatDetailsTool",
        },
        {
            "name": "view_seat",
            "function": {
                "description": """
                    Handles user requests to view details of booked seats.
                        Examples:
                        1. "Show me my booked seat details."
                        2. "Where is my reserved seat?"
                        3. "View my current seat booking."
                """,
            },
            "class": "get_seat_details.AssociateSeatDetailsTool"
        },
        {
            "name": "Cab_Agent",
            "function": "aaosa_call",
            "instructions": """
                {instructions_prefix}
                You are responsible for managing all cab-related operations for the Associate, including booking, canceling,
                and viewing cab details. You handle requests for companies like Late Night Cab (LNC).
                {aaosa_instructions}
            """,
            "command": "aaosa_command",
            "tools": ["book_cab","cancel_cab","view_cab"],
            "allow": {
                "sly_data": {
                    "associate_id": true
                }
            }
        },
        {
            "name": "book_cab",
            "function": {
                "description": """
                    Books a cab, including Late Night Cab (LNC) and adhoc cabs.
                        Returns an Adaptive Card JSON format with the cab booking details.
                        Examples:
                        1. "Book a cab for late tonight."
                        2. "I need a late-night cab."
                        3. "Please book a cab for late night ASAP."
                """,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "type": "string",
                            "description": "The user's query for booking a cab."
                        }
                    },
                    "required": ["query"]
                }
            },
            "class": "get_onec_faq.GetOneCFAQTool"
        },
        {
            "name": "cancel_cab",
            "function": {
                "description": """
                    Cancels an existing cab booking.
                        Examples:
                        1. "Cancel my cab booking with reservation ID 12345."
                        2. "I want to cancel my cab reservation."
                        3. "Please cancel the cab I booked for tonight."
                """,
            },
            "class": "get_cab_details.CabBookingDetailsTool"
        },
        {
            "name": "view_cab",
            "function": {
                "description": """
                    Returns details about a cab reservation.
                        Examples:
                        1. "Show me the details of my cab booking with reservation ID 12345."
                        2. "What are the details of my cab reservation?"
                        3. "Can you provide the details of the cab I booked?"
                """,
            },
            "class": "get_cab_details.CabBookingDetailsTool",
        },
        {
            "name": "1C",
            "function": {
                "description": """
                This tool is to be invoked strictly and exclusively for Cognizant Enterprise-related queries that do not fall under any of the following categories:
                1. **Cab Related**:
                   - Book Late Night Cabs (LNC) or adhoc cabs.
                   - Cancel existing cab bookings.
                   - View details of current cab reservations.
                   - Can you provide me with my cab details and the OTP?
                   - Please share the Adhoc cab Login and Logout OTP.
                   - Please share the LNC cab Logout OTP
                   - Please provide the QR code for the Inter Gate Shuttle.
                   - Can you show me the QR code for IGS?

                2. **Seat Related**:
                   - Book Flexi Seats in Cognizant offices.
                   - Cancel existing seat bookings.
                   - View details of booked seats.

                This tool must only be used for all other Cognizant Enterprise-related queries for Example: Discount's for cognizant employee's,getting/viewing laptop pass of Employee’s and that are not related to the above scenarios.
                Any query falling under the excluded categories should be handled by their respective dedicated tools or systems.
                """,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "type": "string",
                            "description": "The query that the employee needs clarification on"
                        }
                    },
                    "required": ["query"]
                }
            },
            "class": "get_onec_faq.GetOneCFAQTool",
        }
    ]
}